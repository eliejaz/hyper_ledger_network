#!/bin/bash

. scripts/envVar.sh
. scripts/utils.sh

function createOrderer2() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/ordererOrg1.example.com
  mkdir organizations/ordererOrganizations/ordererOrg1.example.com/msp/
  mkdir organizations/ordererOrganizations/ordererOrg1.example.com/tls/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com
  
  # set -x
  # fabric-ca-client enroll -u https://admin2:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  # { set +x; } 2>/dev/null


  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/msp/tlscacerts/tlsca.eurisko-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/tlsca/tlsca.eurisko-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer2 --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin2 --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer2:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/msp" --csr.hosts orderer2.eurisko --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/msp/config.yaml"

  infoln "Generating the orderer-tls certificates"
  set -x
  fabric-ca-client enroll -u https://orderer2:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls" --enrollment.profile tls --csr.hosts orderer2.eurisko --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/orderers/orderer.eurisko/msp/tlscacerts/tlsca.eurisko-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin2:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/users/Admin@eurisko/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/ordererOrg1.example.com/users/Admin@eurisko/msp/config.yaml"
}